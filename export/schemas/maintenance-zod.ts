import { z } from 'zod';

/**
 * Generated Zod Schema for Maintenance
 * 
 * This file is automatically generated from FormConfiguration.
 * Import and use this schema for validation in your application.
 */

// Form validation schema (excludes database-generated fields)
export const maintenanceSchema = z.object({
  technician_name: z.string(),
  system_type: z.string(),
  serial_number: z.string(),
  support_case: z.string(),
  customer: z.string(),
  maintenance_date: z.date(),
  next_maintenance_date: z.date(),
  address: z.string(),
  customer_contact_name: z.string(),
  customer_contact_email: z.string(),
  confirm_system_performance: z.boolean().optional(),
  pre_service_ablation_performance: z.string(),
  pre_service_pulsing_power: z.number(),
  pre_service_cw_power: z.number(),
  replace_desiccant_packs: z.boolean().optional(),
  confirm_humidity_settings: z.boolean().optional(),
  capture_laser_settings: z.boolean().optional(),
  copy_logfiles: z.boolean().optional(),
  inspect_protection_window: z.boolean().optional(),
  clean_replace_optics: z.boolean().optional(),
  annual_water_service: z.boolean().optional(),
  confirm_o_rings_screws: z.boolean().optional(),
  tape_resonator_seams: z.boolean().optional(),
  inspect_protection_hose: z.boolean().optional(),
  update_mds_sensor: z.boolean().optional(),
  clean_equipment_dust: z.boolean().optional(),
  verify_air_pressure: z.boolean().optional(),
  verify_interlocks_estops: z.boolean().optional(),
  issues_found: z.string().optional(),
  corrective_actions: z.string().optional(),
  recommendations: z.string().optional(),
  parts_used: z.string().optional(),
  job_hours: z.string().optional(),
  maintenance_pictures: z.string().optional(),
  supporting_documents: z.string().optional(),
  technician_signature: z.string(),
  customer_signature: z.string().optional(),
});

// Complete schema including database fields (for type generation)
export const completeMaintenanceSchema = z.object({
  id: z.string().uuid(),
  created_at: z.date(),
  updated_at: z.date(),
  technician_name: z.string(),
  system_type: z.string(),
  serial_number: z.string(),
  support_case: z.string(),
  customer: z.string(),
  maintenance_date: z.date(),
  next_maintenance_date: z.date(),
  address: z.string(),
  customer_contact_name: z.string(),
  customer_contact_email: z.string(),
  confirm_system_performance: z.boolean().optional(),
  pre_service_ablation_performance: z.string(),
  pre_service_pulsing_power: z.number(),
  pre_service_cw_power: z.number(),
  replace_desiccant_packs: z.boolean().optional(),
  confirm_humidity_settings: z.boolean().optional(),
  capture_laser_settings: z.boolean().optional(),
  copy_logfiles: z.boolean().optional(),
  inspect_protection_window: z.boolean().optional(),
  clean_replace_optics: z.boolean().optional(),
  annual_water_service: z.boolean().optional(),
  confirm_o_rings_screws: z.boolean().optional(),
  tape_resonator_seams: z.boolean().optional(),
  inspect_protection_hose: z.boolean().optional(),
  update_mds_sensor: z.boolean().optional(),
  clean_equipment_dust: z.boolean().optional(),
  verify_air_pressure: z.boolean().optional(),
  verify_interlocks_estops: z.boolean().optional(),
  issues_found: z.string().optional(),
  corrective_actions: z.string().optional(),
  recommendations: z.string().optional(),
  parts_used: z.string().optional(),
  job_hours: z.string().optional(),
  maintenance_pictures: z.string().optional(),
  supporting_documents: z.string().optional(),
  technician_signature: z.string(),
  customer_signature: z.string().optional(),
});

export type MaintenanceFormData = z.infer<typeof maintenanceSchema>;
export type CompleteMaintenance = z.infer<typeof completeMaintenanceSchema>;
